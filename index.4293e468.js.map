{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/Game2048.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ class $46c5220051a5e3d1$export$97f0fb808b782731 {\n    constructor(size = 4){\n        this.size = size;\n        this.score = 0;\n        this.gameField = Array.from({\n            length: this.size\n        }, ()=>Array(this.size).fill(0));\n    }\n    removeZeros(arr) {\n        return arr.filter((row)=>row !== 0);\n    }\n}\n\n\nconst $09e991522ca7e64e$var$game = new (0, $46c5220051a5e3d1$export$97f0fb808b782731)();\nconst $09e991522ca7e64e$var$start = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$fieldHtml = document.querySelectorAll(\".field-row\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".hidden\");\nconst $09e991522ca7e64e$var$winner = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$size = $09e991522ca7e64e$var$game.size;\nlet $09e991522ca7e64e$var$score = $09e991522ca7e64e$var$game.score;\nlet $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$game.gameField;\nfunction $09e991522ca7e64e$var$addLayoutOnHtml() {\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++)for(let cell = 0; cell < $09e991522ca7e64e$var$size; cell++){\n        if ($09e991522ca7e64e$var$gameField[row][cell] === 2048) $09e991522ca7e64e$var$winner.classList.remove(\"hidden\");\n        const setFieldHtml = $09e991522ca7e64e$var$fieldHtml[row].children[cell];\n        const currentValue = setFieldHtml.textContent = $09e991522ca7e64e$var$gameField[row][cell] || \"\";\n        setFieldHtml.className = currentValue ? `field-cell field-cell--${currentValue}` : \"field-cell\";\n    }\n    $09e991522ca7e64e$var$gameScore.innerText = $09e991522ca7e64e$var$score;\n}\nfunction $09e991522ca7e64e$var$addRandomNumber() {\n    const row = Math.floor(Math.random() * $09e991522ca7e64e$var$size);\n    const cell = Math.floor(Math.random() * $09e991522ca7e64e$var$size);\n    if ($09e991522ca7e64e$var$gameField[row][cell] === 0) $09e991522ca7e64e$var$gameField[row][cell] = Math.random() < 0.1 ? 4 : 2;\n    else $09e991522ca7e64e$var$addRandomNumber();\n}\nfunction $09e991522ca7e64e$var$checkGameOver() {\n    let hasMoveRL = false;\n    let hasMoveUD = false;\n    let comeIn = false;\n    const result = $09e991522ca7e64e$var$gameField.every((r)=>$09e991522ca7e64e$var$gameField.every((_, i)=>r[i] > 0));\n    if (result) {\n        comeIn = true;\n        for(let row = 0; row < 4; row++){\n            const eachRow = $09e991522ca7e64e$var$gameField[row];\n            for(let cell = 0; cell < 4; cell++)if (eachRow[cell] === eachRow[cell + 1]) hasMoveRL = true;\n        }\n        $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$transpose($09e991522ca7e64e$var$gameField);\n        for(let row = 0; row < 4; row++){\n            const eachRow = $09e991522ca7e64e$var$gameField[row];\n            for(let cell = 0; cell < 4; cell++)if (eachRow[cell] === eachRow[cell + 1]) hasMoveUD = true;\n        }\n    }\n    if (!hasMoveRL && !hasMoveUD && comeIn) $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$transpose(arr) {\n    return arr.map((_, index)=>arr.map((row)=>row[index]));\n}\nfunction $09e991522ca7e64e$var$uniteCells(row) {\n    let moved = false;\n    for(let i = 0; i < row.length - 1; i++){\n        if (row[i] === row[i + 1]) {\n            row[i] *= 2;\n            row.splice(i + 1, 1);\n            $09e991522ca7e64e$var$score += row[i];\n            moved = true;\n        } else if (row[i] === 0 && row[i + 1] === 0) moved = false;\n    }\n    while(row.length < $09e991522ca7e64e$var$size)row.push(0);\n    return {\n        row: row,\n        moved: moved\n    };\n}\nfunction $09e991522ca7e64e$var$clickArrowLeft() {\n    let hasMoved = false;\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++){\n        const copyGameField = [\n            ...$09e991522ca7e64e$var$gameField[row]\n        ];\n        const removeZero = $09e991522ca7e64e$var$game.removeZeros($09e991522ca7e64e$var$gameField[row]);\n        const move = $09e991522ca7e64e$var$uniteCells(removeZero);\n        $09e991522ca7e64e$var$gameField[row] = removeZero;\n        if (move.moved || JSON.stringify(copyGameField) !== JSON.stringify(move.row)) hasMoved = true;\n    }\n    if (hasMoved) {\n        $09e991522ca7e64e$var$addRandomNumber();\n        $09e991522ca7e64e$var$checkGameOver();\n    }\n    $09e991522ca7e64e$var$addLayoutOnHtml();\n}\nfunction $09e991522ca7e64e$var$clickArrowRight() {\n    let hasMoved = false;\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++){\n        const copyOfGameField = [\n            ...$09e991522ca7e64e$var$gameField[row]\n        ];\n        const removeZero = $09e991522ca7e64e$var$game.removeZeros($09e991522ca7e64e$var$gameField[row].reverse());\n        const newRow = $09e991522ca7e64e$var$uniteCells(removeZero);\n        $09e991522ca7e64e$var$gameField[row] = newRow.row.reverse();\n        if (newRow.moved || JSON.stringify(copyOfGameField) !== JSON.stringify(newRow.row)) hasMoved = true;\n    }\n    if (hasMoved) {\n        $09e991522ca7e64e$var$addRandomNumber();\n        $09e991522ca7e64e$var$checkGameOver();\n    }\n    $09e991522ca7e64e$var$addLayoutOnHtml();\n}\nfunction $09e991522ca7e64e$var$clickArrowUp() {\n    let hasMoved = false;\n    $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$transpose($09e991522ca7e64e$var$gameField);\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++){\n        const copyOfGameField = [\n            ...$09e991522ca7e64e$var$gameField[row]\n        ];\n        const removeZero = $09e991522ca7e64e$var$game.removeZeros($09e991522ca7e64e$var$gameField[row]);\n        const newRow = $09e991522ca7e64e$var$uniteCells(removeZero);\n        $09e991522ca7e64e$var$gameField[row] = newRow.row;\n        if (newRow.moved || JSON.stringify(copyOfGameField) !== JSON.stringify(newRow.row)) hasMoved = true;\n    }\n    $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$transpose($09e991522ca7e64e$var$gameField);\n    if (hasMoved) {\n        $09e991522ca7e64e$var$addRandomNumber();\n        $09e991522ca7e64e$var$checkGameOver();\n    }\n    $09e991522ca7e64e$var$addLayoutOnHtml();\n}\nfunction $09e991522ca7e64e$var$clickArrowDown() {\n    let hasMoved = false;\n    $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$transpose($09e991522ca7e64e$var$gameField);\n    for(let row = 0; row < $09e991522ca7e64e$var$size; row++){\n        const copyOfField = [\n            ...$09e991522ca7e64e$var$gameField[row]\n        ];\n        const removeZero = $09e991522ca7e64e$var$game.removeZeros($09e991522ca7e64e$var$gameField[row].reverse());\n        const newRow = $09e991522ca7e64e$var$uniteCells(removeZero);\n        $09e991522ca7e64e$var$gameField[row] = newRow.row.reverse();\n        if (newRow.moved || JSON.stringify(copyOfField) !== JSON.stringify(newRow.row)) hasMoved = true;\n    }\n    $09e991522ca7e64e$var$gameField = $09e991522ca7e64e$var$transpose($09e991522ca7e64e$var$gameField);\n    if (hasMoved) {\n        $09e991522ca7e64e$var$addRandomNumber();\n        $09e991522ca7e64e$var$checkGameOver();\n    }\n    $09e991522ca7e64e$var$addLayoutOnHtml();\n}\nfunction $09e991522ca7e64e$var$handleArrows(e) {\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$clickArrowLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$clickArrowRight();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$clickArrowUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$clickArrowDown();\n            break;\n        default:\n            break;\n    }\n}\n$09e991522ca7e64e$var$start.addEventListener(\"click\", ()=>{\n    document.addEventListener(\"keydown\", $09e991522ca7e64e$var$handleArrows);\n    $09e991522ca7e64e$var$startMessage.hidden = true;\n    if ($09e991522ca7e64e$var$start.innerText === \"Start\") {\n        $09e991522ca7e64e$var$start.innerText = \"Restart\";\n        $09e991522ca7e64e$var$start.classList.replace(\"start\", \"restart\");\n    } else {\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$gameField = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n    }\n    $09e991522ca7e64e$var$addRandomNumber();\n    $09e991522ca7e64e$var$addRandomNumber();\n    $09e991522ca7e64e$var$addLayoutOnHtml();\n});\n\n\n//# sourceMappingURL=index.4293e468.js.map\n","import { Game2048 } from \"./Game2048.js\";\n\nconst game = new Game2048();\n\nconst start = document.querySelector(\".start\");\nconst fieldHtml = document.querySelectorAll(\".field-row\");\nconst gameScore = document.querySelector(\".game-score\");\nconst startMessage = document.querySelector(\".message-start\");\nconst loseMessage = document.querySelector(\".hidden\");\nconst winner = document.querySelector(\".message-win\");\n\nconst size = game.size;\nlet score = game.score;\n\nlet gameField = game.gameField;\n\nfunction addLayoutOnHtml() {\n  for (let row = 0; row < size; row++) {\n    for (let cell = 0; cell < size; cell++) {\n      if (gameField[row][cell] === 2048) {\n        winner.classList.remove(\"hidden\");\n      }\n\n      const setFieldHtml = fieldHtml[row].children[cell];\n      const currentValue = (setFieldHtml.textContent =\n        gameField[row][cell] || \"\");\n\n      setFieldHtml.className = currentValue\n        ? `field-cell field-cell--${currentValue}`\n        : \"field-cell\";\n    }\n  }\n\n  gameScore.innerText = score;\n}\n\nfunction addRandomNumber() {\n  const row = Math.floor(Math.random() * size);\n  const cell = Math.floor(Math.random() * size);\n\n  if (gameField[row][cell] === 0) {\n    gameField[row][cell] = Math.random() < 0.1 ? 4 : 2;\n  } else {\n    addRandomNumber();\n  }\n}\n\nfunction checkGameOver() {\n  let hasMoveRL = false;\n  let hasMoveUD = false;\n  let comeIn = false;\n\n  const result = gameField.every((r) => gameField.every((_, i) => r[i] > 0));\n\n  if (result) {\n    comeIn = true;\n\n    for (let row = 0; row < 4; row++) {\n      const eachRow = gameField[row];\n\n      for (let cell = 0; cell < 4; cell++) {\n        if (eachRow[cell] === eachRow[cell + 1]) {\n          hasMoveRL = true;\n        }\n      }\n    }\n\n    gameField = transpose(gameField);\n\n    for (let row = 0; row < 4; row++) {\n      const eachRow = gameField[row];\n\n      for (let cell = 0; cell < 4; cell++) {\n        if (eachRow[cell] === eachRow[cell + 1]) {\n          hasMoveUD = true;\n        }\n      }\n    }\n  }\n\n  if (!hasMoveRL && !hasMoveUD && comeIn) {\n    loseMessage.classList.remove(\"hidden\");\n  }\n}\n\nfunction transpose(arr) {\n  return arr.map((_, index) => arr.map((row) => row[index]));\n}\n\nfunction uniteCells(row) {\n  let moved = false;\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row.splice(i + 1, 1);\n      score += row[i];\n      moved = true;\n    } else if (row[i] === 0 && row[i + 1] === 0) {\n      moved = false;\n    }\n  }\n\n  while (row.length < size) {\n    row.push(0);\n  }\n\n  return {\n    row,\n    moved,\n  };\n}\n\nfunction clickArrowLeft() {\n  let hasMoved = false;\n\n  for (let row = 0; row < size; row++) {\n    const copyGameField = [...gameField[row]];\n    const removeZero = game.removeZeros(gameField[row]);\n    const move = uniteCells(removeZero);\n\n    gameField[row] = removeZero;\n\n    if (\n      move.moved ||\n      JSON.stringify(copyGameField) !== JSON.stringify(move.row)\n    ) {\n      hasMoved = true;\n    }\n  }\n\n  if (hasMoved) {\n    addRandomNumber();\n    checkGameOver();\n  }\n\n  addLayoutOnHtml();\n}\n\nfunction clickArrowRight() {\n  let hasMoved = false;\n\n  for (let row = 0; row < size; row++) {\n    const copyOfGameField = [...gameField[row]];\n    const removeZero = game.removeZeros(gameField[row].reverse());\n    const newRow = uniteCells(removeZero);\n\n    gameField[row] = newRow.row.reverse();\n\n    if (\n      newRow.moved ||\n      JSON.stringify(copyOfGameField) !== JSON.stringify(newRow.row)\n    ) {\n      hasMoved = true;\n    }\n  }\n\n  if (hasMoved) {\n    addRandomNumber();\n    checkGameOver();\n  }\n  addLayoutOnHtml();\n}\n\nfunction clickArrowUp() {\n  let hasMoved = false;\n\n  gameField = transpose(gameField);\n\n  for (let row = 0; row < size; row++) {\n    const copyOfGameField = [...gameField[row]];\n\n    const removeZero = game.removeZeros(gameField[row]);\n    const newRow = uniteCells(removeZero);\n\n    gameField[row] = newRow.row;\n\n    if (\n      newRow.moved ||\n      JSON.stringify(copyOfGameField) !== JSON.stringify(newRow.row)\n    ) {\n      hasMoved = true;\n    }\n  }\n\n  gameField = transpose(gameField);\n\n  if (hasMoved) {\n    addRandomNumber();\n    checkGameOver();\n  }\n\n  addLayoutOnHtml();\n}\n\nfunction clickArrowDown() {\n  let hasMoved = false;\n\n  gameField = transpose(gameField);\n\n  for (let row = 0; row < size; row++) {\n    const copyOfField = [...gameField[row]];\n    const removeZero = game.removeZeros(gameField[row].reverse());\n    const newRow = uniteCells(removeZero);\n\n    gameField[row] = newRow.row.reverse();\n\n    if (\n      newRow.moved ||\n      JSON.stringify(copyOfField) !== JSON.stringify(newRow.row)\n    ) {\n      hasMoved = true;\n    }\n  }\n\n  gameField = transpose(gameField);\n\n  if (hasMoved) {\n    addRandomNumber();\n    checkGameOver();\n  }\n  addLayoutOnHtml();\n}\n\nfunction handleArrows(e) {\n  switch (e.key) {\n    case \"ArrowLeft\":\n      clickArrowLeft();\n      break;\n    case \"ArrowRight\":\n      clickArrowRight();\n      break;\n    case \"ArrowUp\":\n      clickArrowUp();\n      break;\n    case \"ArrowDown\":\n      clickArrowDown();\n      break;\n    default:\n      break;\n  }\n}\n\nstart.addEventListener(\"click\", () => {\n  document.addEventListener(\"keydown\", handleArrows);\n  startMessage.hidden = true;\n\n  if (start.innerText === \"Start\") {\n    start.innerText = \"Restart\";\n    start.classList.replace(\"start\", \"restart\");\n  } else {\n    loseMessage.classList.add(\"hidden\");\n\n    gameField = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n  addRandomNumber();\n  addRandomNumber();\n  addLayoutOnHtml();\n});\n","/* eslint-disable function-paren-newline */\nexport class Game2048 {\n  constructor(size = 4) {\n    this.size = size;\n    this.score = 0;\n\n    this.gameField = Array.from({ length: this.size }, () =>\n      Array(this.size).fill(0),\n    );\n  }\n\n  removeZeros(arr) {\n    return arr.filter((row) => row !== 0);\n  }\n}\n"],"names":["$09e991522ca7e64e$var$game","constructor","size","score","gameField","Array","from","length","fill","removeZeros","arr","filter","row","$09e991522ca7e64e$var$start","document","querySelector","$09e991522ca7e64e$var$fieldHtml","querySelectorAll","$09e991522ca7e64e$var$gameScore","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winner","$09e991522ca7e64e$var$size","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$gameField","$09e991522ca7e64e$var$addLayoutOnHtml","cell","classList","remove","setFieldHtml","children","currentValue","textContent","className","innerText","$09e991522ca7e64e$var$addRandomNumber","Math","floor","random","$09e991522ca7e64e$var$checkGameOver","hasMoveRL","hasMoveUD","comeIn","every","r","_","i","eachRow","$09e991522ca7e64e$var$transpose","map","index","$09e991522ca7e64e$var$uniteCells","moved","splice","push","$09e991522ca7e64e$var$handleArrows","e","key","$09e991522ca7e64e$var$clickArrowLeft","hasMoved","copyGameField","removeZero","move","JSON","stringify","$09e991522ca7e64e$var$clickArrowRight","copyOfGameField","newRow","reverse","$09e991522ca7e64e$var$clickArrowUp","$09e991522ca7e64e$var$clickArrowDown","copyOfField","addEventListener","hidden","replace","add"],"version":3,"file":"index.4293e468.js.map"}